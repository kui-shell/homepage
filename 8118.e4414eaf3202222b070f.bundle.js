(self.webpackChunkkui_shell=self.webpackChunkkui_shell||[]).push([[8118],{14178:(e,i,n)=>{"use strict";n.r(i),n.d(i,{default:()=>a});var t=n(11227),r=n.n(t),s=n(32383),o=n(7716),l=function(e,i,n,t){return new(n||(n=Promise))((function(r,s){function o(e){try{c(t.next(e))}catch(e){s(e)}}function l(e){try{c(t.throw(e))}catch(e){s(e)}}function c(e){var i;e.done?r(e.value):(i=e.value,i instanceof n?i:new n((function(e){e(i)}))).then(o,l)}c((t=t.apply(e,i||[])).next())}))};const c=r()("plugins/bash-like/pty/kuirc");const a=function(){return new Promise(((e,i)=>l(this,void 0,void 0,(function*(){if("win32"===o.platform)return c("skipping prefetchAliases"),e("");c("prefetchAliases");const t=Promise.resolve().then(n.t.bind(n,67435,19)),r=Promise.resolve().then(n.t.bind(n,12993,23)),a=Promise.resolve().then(n.t.bind(n,26470,23)),h=n.e(6120).then(n.bind(n,76120)),{getLoginShell:u}=yield Promise.resolve().then(n.bind(n,82208)),f=yield u();c("prefetchAliases got shell",f),(0,s.exec)(`${f} -l -c alias`,((n,s,o)=>l(this,void 0,void 0,(function*(){try{if(o&&c(o),n)c("error in prefetchAliases 1",n),i(n);else{c("got aliases");const n=s.toString().split(/\n/).filter((e=>e)).map((e=>/^alias /.test(e)?e:`alias ${e}`)).join("\n"),o=(yield a).join((yield t).tmpdir(),`kuirc-${(yield h).v4()}`);c("kuirc",o),(yield r).writeFile(o,n,(n=>{n?(c(n),i(n)):e(o)}))}}catch(e){console.error("error in prefetchEnv 2",e),i(e)}}))))}))))}()}}]);