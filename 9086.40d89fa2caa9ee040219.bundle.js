(self.webpackChunkkui_shell=self.webpackChunkkui_shell||[]).push([[9086],{63542:(e,n,t)=>{"use strict";t.d(n,{Z:()=>o});const o="github.com/kui-shell/plugin-kubectl/v1alpha1"},99086:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>h});var o=t(51173),l=t(63542);function a(e){return e.apiVersion===l.Z&&"HelmRelease"===e.kind}const m={when:a,mode:{mode:"hooks",label:(0,o.i18n)("plugin-kubectl","helm")("Hooks"),content:(e,n)=>({contentFrom:`helm get hooks ${n.metadata.name}`,contentType:"yaml"})}},c={when:a,mode:{mode:"manifest",label:(0,o.i18n)("plugin-kubectl","helm")("Manifest"),content:(e,n)=>({contentFrom:`helm get manifest ${n.metadata.name}`,contentType:"yaml"})}},i={when:a,mode:{mode:"values",label:(0,o.i18n)("plugin-kubectl","helm")("Values"),content:(e,n)=>({contentFrom:`helm get values ${n.metadata.name}`,contentType:"json"})}},u={when:a,mode:{mode:"notes",label:(0,o.i18n)("plugin-kubectl","helm")("Notes"),content:(e,n)=>({contentFrom:`helm get notes ${n.metadata.name}`,contentType:"text/markdown"})}},s={when:a,mode:{mode:"status",label:(0,o.i18n)("plugin-kubectl","helm")("Show Status"),kind:"drilldown",command:(e,n)=>`helm status ${n.metadata.name}`}};var d=function(e,n,t,o){return new(t||(t=Promise))((function(l,a){function m(e){try{i(o.next(e))}catch(e){a(e)}}function c(e){try{i(o.throw(e))}catch(e){a(e)}}function i(e){var n;e.done?l(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(m,c)}i((o=o.apply(e,n||[])).next())}))};const h=e=>d(void 0,void 0,void 0,(function*(){yield e.registerModes(m,c,i,u,s)}))}}]);