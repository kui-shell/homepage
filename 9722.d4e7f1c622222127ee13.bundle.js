(self.webpackChunkkui_shell=self.webpackChunkkui_shell||[]).push([[9722],{87645:(e,t,s)=>{"use strict";s.r(t),s.d(t,{showingPrevious:()=>h,Logs:()=>m,content:()=>v});var o=s(11227),r=s.n(o),n=s(67294),i=s(51173),a=s(24107),u=s(79895),g=s(33168),c=s(53156),d=function(e,t,s,o){return new(s||(s=Promise))((function(r,n){function i(e){try{u(o.next(e))}catch(e){n(e)}}function a(e){try{u(o.throw(e))}catch(e){n(e)}}function u(e){var t;e.done?r(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(i,a)}u((o=o.apply(e,t||[])).next())}))};const p=r()("plugin-kubectl/Logs"),l=(0,i.i18n)("plugin-kubectl","logs");function h(e){return e&&(!!e.parsedOptions.p||!!e.parsedOptions.previous)}class m extends g.oI{constructor(e){super(e),this.state=Object.assign(this.state,{showingPrevious:h(this.props.args.argsForMode),container:this.defaultContainer()})}supportsAllContainers(){return!0}mode(){return"logs"}defaultContainer(){if(this.props.args.argsForMode){const e=(0,c.ZO)(this.props.args.argsForMode,"logs");if(e)return e}return this.props.pod&&this.props.pod.spec.containers&&1===this.props.pod.spec.containers.length?this.props.pod.spec.containers[0].name:void 0}toolbarText(e){const t={Live:{message:"Logs are live streaming.",type:"info"},Paused:{message:"Log streaming is paused.",type:"warning"},Stopped:{message:"Log streaming stopped.",type:"warning"},Error:{message:"Log streaming stopped abnormally.",type:"error"}};if(!t)return;if(!t[e])return void console.error(`Unknown streaming status: ${e}`);const s=t[e].message,o=this.previousMessage(this.state.isTerminated?s:`${s} ${this.state.container?"Showing container X.":"Showing all containers."}`);return{type:t[e].type,text:this.state.container?l(o,this.state.container):l(o)}}previousMessage(e){return this.state.showingPrevious?`${e} Showing previous instance.`:e}isMulti(){return!(!this.props.args.argsForMode||!(0,c.kb)(this.props.args.argsForMode))}ptyCommand(){const{args:e,pod:t}=this.props,{container:s}=this.state,o=s?`-c ${s}`:"--all-containers",r=this.isMulti();if(!e.argsForMode||!e.argsForMode.command||r&&s){const n=this.state.showingPrevious||e.argsForMode&&h(e.argsForMode)?"--previous":"",i=!r||e.argsForMode&&e.argsForMode.parsedOptions.f?"-f":"",a=i?"Live":void 0;if(!s&&e.argsForMode&&(0,c.kb)(e.argsForMode))return{command:e.argsForMode.command,isLive:a};const g=r&&s&&s.split(/:/),d=g&&2===g.length&&g,l=d?d[0]:t.spec._podName||t.metadata.name,m=d?`-c ${d[1]}`:o,v=(0,c.QG)(e,`${(0,u.fY)(e)} logs ${l} -n ${t.metadata.namespace} ${m} ${i} ${n} --tail 1000`);return p("log command",v),{isLive:a,command:v}}{const t=h(e.argsForMode)?"--previous":"",n=e.argsForMode.parsedOptions.tail?"":" --tail 1000",i=`${e.argsForMode.command} ${s?"":o} ${n} ${t}`;return r||(e.argsForMode.command=void 0),{command:i,isLive:e.parsedOptions.f?"Live":"Paused"}}}toolbarButtonsForStreaming(e){if("Live"===e||"Paused"===e){const t="Live"===e;return[{mode:"toggle-streaming",label:l(t?"Pause Streaming":"Resume Streaming"),kind:"view",icon:n.createElement(a.PJ,{icon:t?"Pause":"Play"}),command:this.toggleStreaming.bind(this,!t)}]}return[]}previous(){return{mode:"kubectl-logs-previous-toggle",label:this.state.showingPrevious?l("Show Current"):l("Show Previous"),kind:"view",command:()=>this.showContainer(void 0,(e=>({showingPrevious:!e.showingPrevious})))}}toolbarButtons(e){return[this.previous()].concat(super.toolbarButtons(e))}doFlowControl(e){this.state.job&&(e?this.state.job.xon():this.state.job.xoff())}toggleStreaming(e){const t=e?"Live":"Paused";this.state.isLive!==t&&(this.doFlowControl(e),this.updateToolbar(e?"Live":"Paused"),this.setState((e=>{if(e.isLive!==t)return{isLive:t}})))}needsHysteresis(){return!0}nothingToShow(){return n.createElement("div",{className:"kui--sidecar-text-content kui--center-absolute"},n.createElement("div",{className:"kui--hero-text"},l("No log data")))}}function v(e,t,s){return d(this,void 0,void 0,(function*(){return{react:function(o){return n.createElement(m,{tab:e,pod:t,args:s,toolbarController:o})}}}))}}}]);