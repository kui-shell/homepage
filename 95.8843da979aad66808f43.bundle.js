(self.webpackChunkkui_shell=self.webpackChunkkui_shell||[]).push([[95,2771],{95:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>c});var i=n(29512),o=n(22771),r=function(t,e,n,i){return new(n||(n=Promise))((function(o,r){function a(t){try{c(i.next(t))}catch(t){r(t)}}function s(t){try{c(i.throw(t))}catch(t){r(t)}}function c(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}c((i=i.apply(t,e||[])).next())}))};const a={command:"card",strict:"card",example:"card [<card body text>] [--title <card title text>]",docs:"Card",optional:[{name:"body",docs:"card body text"},{name:"--title",docs:"Content rendered inside the CardTitle"},{name:"-f",docs:"File that contains the texts"},{name:"--file",docs:"File that contains the texts"}]};function s(t){return r(this,void 0,void 0,(function*(){const e=t.argvNoOptions,n=t.parsedOptions,{title:r}=n,a=n.filename||n.f;if(a){const e=yield(0,o.fetchMarkdownFile)(a,t);return{react:(0,i.Z)({title:r,children:e})}}{const t=e.slice(1);if(t)return{react:(0,i.Z)({title:r,children:t})};throw new Error("Invalid arguments: need card body text")}}))}const c=t=>r(void 0,void 0,void 0,(function*(){t.listen("/card",s,{usage:a})}))},22771:(t,e,n)=>{"use strict";n.r(e),n.d(e,{fetchMarkdownFile:()=>a,default:()=>c});var i=n(51173),o=function(t,e,n,i){return new(n||(n=Promise))((function(o,r){function a(t){try{c(i.next(t))}catch(t){r(t)}}function s(t){try{c(i.throw(t))}catch(t){r(t)}}function c(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}c((i=i.apply(t,e||[])).next())}))};const r={command:"commentary",strict:"commentary",example:"commentary -f [<markdown file path>]",docs:"Commentary",optional:[{name:"--title",alias:"-t",docs:"Title for the commentary"},{name:"--base-url",alias:"-b",docs:"Base URL for images"},{name:"--file",alias:"-f",docs:"File that contains the texts"}]};function a(t,e){return o(this,void 0,void 0,(function*(){const n=(0,i.findFile)((0,i.expandHomeDir)(t));if("md"!==t.substring(t.lastIndexOf(".")+1))throw new Error("File extension not support");{const t=(yield e.tab.REPL.rexec(`vfs fstat ${e.tab.REPL.encodeComponent(n)} --with-data`)).content;if(t.isDirectory)throw new Error("Invalid filepath");return t.data}}))}function s(t){return o(this,void 0,void 0,(function*(){const{title:e}=t.parsedOptions,n=t.parsedOptions.file||t.parsedOptions.f,i=(n?yield a(n,t):t.command.trim().slice(t.command.indexOf(" ")+1).trim().replace(/\\n/g,"\n").replace(/\\t/g,"\t").replace(/(-t|--title)\s+\S+/,""))||"#";if(void 0!==i)return"#"===i||"commentary"===t.command?{apiVersion:"kui-shell/v1",kind:"CommentaryResponse",props:{title:e,children:"",baseUrl:t.parsedOptions["base-url"]}}:{apiVersion:"kui-shell/v1",kind:"CommentaryResponse",props:{title:e,children:i,baseUrl:t.parsedOptions["base-url"]}};throw new Error("Insufficient arguments: must specify either --file or -f, or provide a comment on the command line")}))}const c=t=>o(void 0,void 0,void 0,(function*(){t.listen("/commentary",s,{usage:r,outputOnly:!0}),t.listen("/#",s,{usage:r,outputOnly:!0})}))}}]);