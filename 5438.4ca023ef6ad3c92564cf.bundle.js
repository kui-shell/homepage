(self.webpackChunkkui_shell=self.webpackChunkkui_shell||[]).push([[5438,2383],{5438:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>v,doExec:()=>h});var o=t(11227),s=t.n(o),c=t(32383),i=t(51173);const r=s()("plugins/bash-like/util/json");var d=t(68993),l=t(7716),a=function(e,n,t,o){return new(t||(t=Promise))((function(s,c){function i(e){try{d(o.next(e))}catch(e){c(e)}}function r(e){try{d(o.throw(e))}catch(e){c(e)}}function d(e){var n;e.done?s(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(i,r)}d((o=o.apply(e,n||[])).next())}))};const u=s()("plugins/bash-like/cmds/general"),h=(e,n)=>new Promise(((t,o)=>a(void 0,void 0,void 0,(function*(){const s={maxBuffer:1048576,env:Object.assign({},l.env,n.env||{})};l.env.SHELL&&(s.shell=l.env.SHELL);const i=(0,c.exec)(e,s);let d="",h="";i.stdout.on("data",(e=>a(void 0,void 0,void 0,(function*(){const t=e.toString();n.stdout?n.stdout(e):d+=t})))),i.stderr.on("data",(e=>{h+=e,n.stderr&&n.stderr(e.toString())})),i.on("close",(e=>a(void 0,void 0,void 0,(function*(){if(0===e)if(n&&n.json)try{t(JSON.parse(d))}catch(e){const n=new Error("unexpected non-JSON");n.value=d,o(n)}else if(n&&n.raw)t(d);else if(d||h){const e=(e=>{const n=e.substring(e.indexOf("{"));if(n.length>0)try{const e=JSON.parse(n);return r("successfully parsed out json",e),e}catch(e){}})(d);e&&"object"==typeof e?(e.type="shell",e.verb="get",t(e)):t(d)}else t(!0);else{u("non-zero exit code",e);const t=h.replace(/(^\/[^/]+\/[^:]+: )(line \d+: )?/,"");try{((e,n,t,o,s,c)=>{const i=0===o.length?t:o;if(s&&s.nested&&127!==n){const e=new Error(i);throw e.code=n,e}{const e=new Error(i);throw e.html=c,s.stderr?e.code=c:i.match(/File exists/i)?e.code=409:127!==n&&i.match(/not found/i)?e.code=404:e.code=n,e}})(0,e,d,t,n)}catch(e){o(e)}}}))))})))),f=e=>{if(e.execOptions.type===i.ExecType.TopLevel)throw new Error("this command is intended for internal consumption only");return(0,d.XN)(e)},v=e=>{e.listen("/!",d.XN,{docs:"Execute a UNIX shell command",requiresLocal:!0}),e.listen("/sendtopty",f,{docs:"Execute a UNIX shell command with a PTY",hidden:!0}),e.listen("/pwd",(()=>l.env.PWD||"/"))}},32383:()=>{}}]);