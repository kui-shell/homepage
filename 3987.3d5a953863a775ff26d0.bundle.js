(self.webpackChunkkui_shell=self.webpackChunkkui_shell||[]).push([[3987],{63987:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>u});var i=n(11227),r=n.n(i),o=n(51173),c=function(t,e,n,i){return new(n||(n=Promise))((function(r,o){function c(t){try{s(i.next(t))}catch(t){o(t)}}function a(t){try{s(i.throw(t))}catch(t){o(t)}}function s(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(c,a)}s((i=i.apply(t,e||[])).next())}))};const a=r()("plugins/bash-like/tab-completion/git");function s(t,e,n){return c(this,void 0,void 0,(function*(){const i=e.argvNoOptions,{toBeCompleted:r}=n;if("git"===i[0]&&("checkout"===i[1]||"branch"===i[1]))try{return(yield t.REPL.qexec(`! git branch --list '${r?r+"*":""}' --sort=refname --sort=committerdate`,void 0,void 0,{raw:!0})).split(/[\n\r]/).filter((t=>t)).map((t=>t.replace(/^\s*\*?\s*/,"").substring(r.length)))}catch(t){return a("squashing error from attempted git tab completion",t),[]}}))}const u=()=>{(0,o.registerTabCompletionEnumerator)(s)}}}]);