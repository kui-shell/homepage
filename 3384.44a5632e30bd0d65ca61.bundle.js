(self.webpackChunkkui_shell=self.webpackChunkkui_shell||[]).push([[3384],{93384:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>l});const i={apiVersion:"kui-shell/v1",kind:"NavResponse",breadcrumbs:[{label:"iter8"},{label:"about",command:"iter8 about"}],menus:[{label:"Iter8",items:[{mode:"About",content:"#### Iter8\n\n[Iter8](https://github.com/iter8-tools/iter8) enables statistically robust continuous experimentation of microservices in your CI/CD pipelines\n\nIter8’s expressive model of cloud experimentation supports a variety of CI/CD scenarios. Using an iter8 experiment, you can:\n\n- Run a **_performance test_** with a single version of a microservice.\n\n- Perform a **_canary release_** with two versions, a baseline and a candidate. Iter8 will shift application traffic safely and gradually to the candidate, if it meets the criteria you specify in the experiment.\n\n- Perform an **_A/B test_** with two versions – a baseline and a candidate. Iter8 will identify and shift application traffic safely and gradually to the winner, where the winning version is defined by the criteria you specify in the experiment.\n\n- Perform an **_A/B/N_** test with multiple versions – a baseline and multiple candidates. Iter8 will identify and shift application traffic safely and gradually to the winner.\n\n[Learn more](https://iter8.tools/)\n",contentType:"text/markdown"},{mode:"Commands",content:"\n#### Currently Available Commands:\n\nWe have implemented the following commands that can be used once the KUI terminal is up and running:\n#### 1. iter8 metrics\nThis command opens a KUI sidecar where the user can perform CRUD operations on the iter8 metric configmap. Specifically, users can add, edit, delete and restore metrics on the KUI sidecar that is opened.\n#### 2. iter8 create experiment\nThis command also opens a KUI sidecar and is used to create Human-In-The-Loop experiments with iter8. This command opens a sidecar with two tabs- one for creating the experiment and one for viewing the decision and metrics for the experiment from _iter8-analytics_. The sidecar options are interactive and can be experimented with by the user.\n#### 2. iter8 config verify\nThis command verifies if _iter8-analytics_ and _iter8-controller_ service is currently installed in the user's environment\n\nMore information on how to use these commands is available [here](http://iter8.tools/integrations/iter8-kui/)\n",contentType:"text/markdown"}]},{label:"Components",items:[{mode:"Iter8 Controller",content:"\n#### Iter8 Controller\n\nA Kubernetes controller that automates canary releases and A/B testing by adjusting the traffic across different versions of a microservice as recommended by _iter8-analytics_ until the canary replaces the baseline (previous) version.\n",contentType:"text/markdown"},{mode:"Iter8 Analytics",content:"\n#### Iter8 Analytics\n\nA service that assesses the behavior of different microservice versions by analyzing metrics associated with each version using robust statistical techniques to determine which version is the winner with respect to the metrics of interest and which versions pass a set of success criteria.\n\nIt returns the result of the data analysis along with a recommendation for how the traffic should be split across all microservice versions. The iter8-analytics' REST API is used by _iter8-controller_.\n",contentType:"text/markdown"}]}],links:[{label:"Github",href:"https://github.com/iter8-tools/iter8"},{label:"Join Slack",href:"https://join.slack.com/t/iter8-tools/shared_invite/enQtODU0NTczMTQ5NDU4LTJmNGE1OTBhOWI4NzllZGE0ZjdhM2M3MzJlMjcxYjliMTJlM2YxMzQ4OWQ5NGViYTM2MTU4MWRkZTgxNzZiMzg"},{label:"Learn More",href:"https://iter8.tools/"}]};n(7716);var r=function(e,t,n,i){return new(n||(n=Promise))((function(r,a){function o(e){try{c(i.next(e))}catch(e){a(e)}}function s(e){try{c(i.throw(e))}catch(e){a(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,s)}c((i=i.apply(e,t||[])).next())}))};function a(e,t){return r(this,void 0,void 0,(function*(){const n=yield t.REPL.qexec("kubectl get svc -n iter8 -o jsonpath='{.items[*].metadata.name}'");return n.substring(1,n.length-1).split(" ").includes(e)}))}var o=function(e,t,n,i){return new(n||(n=Promise))((function(r,a){function o(e){try{c(i.next(e))}catch(e){a(e)}}function s(e){try{c(i.throw(e))}catch(e){a(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,s)}c((i=i.apply(e,t||[])).next())}))};function s(e){return o(this,void 0,void 0,(function*(){const[t,n]=yield Promise.all([a("iter8-controller",e),a("iter8-analytics",e)]);return(t&&n).toString()}))}var c=function(e,t,n,i){return new(n||(n=Promise))((function(r,a){function o(e){try{c(i.next(e))}catch(e){a(e)}}function s(e){try{c(i.throw(e))}catch(e){a(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,s)}c((i=i.apply(e,t||[])).next())}))};const l=e=>c(void 0,void 0,void 0,(function*(){e.listen("/iter8/create/experiment",(()=>({kind:"Command",metadata:{name:"Experiment Creation"},modes:[]})),{isExperimental:!0}),e.listen("/iter8/metrics",(()=>({kind:"Command",metadata:{name:"Metric Command",namespace:"Use: kubectl get configmaps -n iter8"},modes:[]})),{isExperimental:!0}),e.listen("/iter8/about",(()=>i),{isExperimental:!0}),e.listen("/iter8/config/verify",s,{isExperimental:!0})}))}}]);